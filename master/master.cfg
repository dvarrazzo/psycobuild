# ex: set syntax=python:

c = BuildmasterConfig = {}

####### PROJECT IDENTITY

c['projectName'] = "Psycopg"
c['projectURL'] = "http://initd.org/psycopg"
c['buildbotURL'] = "http://localhost:8010/"


####### BUILDSLAVES

c['slavePortnum'] = 9989

from buildbot.buildslave import BuildSlave

c['slaves'] = [
    BuildSlave("ikki", "pass", max_builds=1)
]


####### CHANGESOURCES

from buildbot.changes.pb import PBChangeSource

c['change_source'] = PBChangeSource()


####### SCHEDULERS

from buildbot.scheduler import Scheduler, Triggerable

c['schedulers'] = []

# Run the test after the sdist is ready.
c['schedulers'].append(
    Triggerable(name='test-sdist',
    builderNames=['test-py2.4', 'test-py2.6']))


####### BUILDERS

#repourl = "git://src.develer.com/users/piro/psycopg2.git"
repourl = "/home/piro/dev/psycopg2/"
branch = "python2"

from buildbot.locks import SlaveLock
from buildbot.config import BuilderConfig
from buildbot.process.factory import BuildFactory
from buildbot.process.properties import WithProperties
from buildbot.steps.source import Git
from buildbot.steps.shell import Compile, Test, ShellCommand, SetProperty
from buildbot.steps.trigger import Trigger
from buildbot.steps.transfer import FileUpload, FileDownload

def make_sdist():
    """Create the builder that makes the sdist."""
    make = ['make']
    f = BuildFactory()
    f.addStep(Git(repourl=repourl, branch=branch))
    f.addStep(SetProperty(
        command=r"""grep PSYCOPG_VERSION setup.py | head -1 | sed -e "s/.*'\(.*\)'/\1/" """,
        property="version"))
    f.addStep(Compile(command=make + ["package"]))
    f.addStep(ShellCommand(
        description="making env", descriptionDone="env",
        command=make + ["env"]))
    f.addStep(ShellCommand(
        description="making docs", descriptionDone="docs",
        command=make + ["docs"]))
    f.addStep(ShellCommand(
        description="making sdist", descriptionDone="sdist",
        command=make + ["sdist"]))
    f.addStep(FileUpload(
        slavesrc=WithProperties("dist/psycopg2-%s.tar.gz", "version"),
        masterdest="public_html/sdist/psycopg2-latest.tar.gz"))

    f.addStep(Trigger(schedulerNames=['test-sdist']))

    b = BuilderConfig(
        name="sdist",
        slavename="ikki",
        factory=f)

    return b

def make_test_sdist(python, python_bin=None):
    """Return a `BuilderConfig` to run tests with a given py version.

    - python: a version e.g. 2.5
    - python_bin: the python executable
    """
    if python_bin is None:
        python_bin = "python" + python

    make = ["make", "PYTHON=%s" % python_bin]
    f = BuildFactory()
    f.addStep(FileDownload(
        mastersrc="public_html/sdist/psycopg2-latest.tar.gz",
        slavedest="psycopg2-latest.tar.gz"))
    f.addStep(SetProperty(
        command=r"""tar tzf psycopg2-latest.tar.gz | head -1""",
        property="pkgdir"))
    f.addStep(ShellCommand(
        description="unpacking", descriptionDone="unpack",
        command=["tar", "xzvf", "psycopg2-latest.tar.gz"]))
    f.addStep(Compile(command=make + ["package"],
        workdir=WithProperties("build/%s", "pkgdir")))
    f.addStep(Test(command=make + ["runtests"],
        workdir=WithProperties("build/%s", "pkgdir")))

    b = BuilderConfig(
        name="test-py%s" % python,
        slavename="ikki",
        factory=f)

    return b

c['builders'] = [
    make_sdist(),
    make_test_sdist(python="2.4", python_bin="/usr/local/py24/bin/python2.4"),
    make_test_sdist(python="2.6"),
]


####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
c['status'].append(html.WebStatus(http_port=8010, allowForce=True))


####### DEBUGGING OPTIONS

# c['debugPassword'] = "debugpassword"
